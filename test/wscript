#!/usr/bin/env python
import sys, os

def depends(dep):
    dep('marocco')
    dep('marocco', 'pymarocco')


def options(opt):
    opt.load('compiler_cxx')
    opt.load('gtest')
    opt.load('pytest')


def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('gtest')
    cfg.load('pytest')


def build(bld):
    flags = { "cxxflags" : [
                '-g', '-O0', '-std=c++0x',
                '-pedantic', '-Wall', '-Wextra',
                '-Wno-c++0x-compat',
            ]
        }

    bld(target          = 'test-marocco',
        features        = 'cxx cxxprogram gtest',
        test_main       = 'main.cpp',
        source          = bld.path.ant_glob('**/test-*.cpp'),
        install_path    = os.path.join('bin', 'tests'),
        use             = [
            'marocco',
            'sthal_inc',
            ],
        **flags)

    bld(
        tests=bld.path.ant_glob('python/test-*.py'),
        features='pytest',
        use=['pyhmf', 'marocco', 'pymarocco'],
    )

    bld(tests           = [
            'test-scaling.py'
            ],
        disable         = True , # don't run automatically, but with `--test-execall`
        features        = 'pytest',
        use             = ['marocco', 'pymarocco'],
        install_path    = os.path.join('bin', 'tests'))

    from waflib.extras.gtest import summary
    bld.add_post_fun(summary)
