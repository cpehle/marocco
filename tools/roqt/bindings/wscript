#!/usr/bin/env python
import sys, os

try:
    from waflib.extras import symwaf2ic
    from waflib.extras.gtest import summary
    recurse = lambda ctx: None
except ImportError:
    from gtest import summary
    from symwaf2ic import recurse_depends
    recurse = lambda ctx: recurse_depends(depends, ctx)

def load_waf_modules(ctx):
    modules = ['compiler_cxx', 'pytest', 'python', 'pypp', 'boost']
    for mo in modules:
        ctx.load(mo)

def depends(dep):
    dep('marocco')
    dep('halbe')
    dep('ester', 'mpi')

def options(opt):
    recurse(opt)
    load_waf_modules(opt)

def configure(cfg):
    recurse(cfg)
    load_waf_modules(cfg)

def build(bld):
    recurse(bld)

    cxxflags = [
        '-Wno-literal-suffix',  # squelch warnings from openMPI's mpi.h
    ]

    bld(target          = 'pyroqt_inc',
        use             = 'marocco_inc halbe_coordinate_inc realtime_inc',
        export_includes = '../../..')

    bld(target          = 'pyroqt_obj',
        module          = 'pyroqt',
        features        = 'cxx',
        source          =  bld.path.ant_glob('*.cpp'),
        use             =  ['pyroqt_inc', 'mpiconfig'],
        cxxflags=cxxflags + ['-fPIC'])

    bld(target         = 'pyroqt',
        features       = 'cxx cxxshlib pypp pyext pyembed',
        use            = ['pyroqt_obj', 'marocco'],
        script          = 'generate.py',
        output_dir      = 'pyroqt_bindings',
        gen_defines     = 'PYPLUSPLUS __STRICT_ANSI__',
        headers         = 'bindings.h',
        install_path   = 'lib',
        cxxflags=cxxflags)
